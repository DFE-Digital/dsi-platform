name: Deploy image

on:
  workflow_call:
    inputs:
      project_name:
        description: Project name
        required: true
        type: string

      repository_name:
        description: Container repository name
        required: true
        type: string

      tag_name:
        description: Image name
        required: true
        type: string

      transformation_environment:
        description: For transformation environment
        required: true
        type: boolean

    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_PIPELINE_ID:
        required: true

jobs:
  trigger-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            scripts/workflows

      - name: Login to Azure
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          allow-no-subscriptions: true
          enable-AzPSSession: true

      - name: Get access token for Azure DevOps
        run: |
          $token = az account get-access-token `
            --resource 499b84ac-1321-427f-aa17-267ca6975798 `
            --query "accessToken" -o tsv
          echo "AZURE_DEVOPS_TOKEN=$token" >> $env:GITHUB_ENV

      - name: Deploy image for '${{ inputs.project_name }}'
        env:
          AZURE_PIPELINE_ID: ${{ secrets.AZURE_PIPELINE_ID }}
          PROJECT_NAME: ${{ inputs.project_name }}
          REPOSITORY_NAME: ${{ inputs.repository_name }}
          TAG_NAME: ${{ inputs.tag_name }}
          TRAN: ${{ inputs.transformation_environment }}
        run: |
          $response = ./scripts/workflows/Start-AzurePipeline `
            -Token "$env:AZURE_DEVOPS_TOKEN" `
            -ProjectUrl "${{ vars.AZURE_DEVOPS_PROJECT_URL }}" `
            -PipelineId "$env:AZURE_PIPELINE_ID" `
            -TemplateParameters @{
              projectName = "$env:PROJECT_NAME"
              repositoryName = "$env:REPOSITORY_NAME"
              tag = "$env:TAG_NAME"
              tran = ([bool]'$env:TRAN')
            }

          Write-Host "`nLink to pipeline: $($response._links.web.href)"
